{"version":3,"sources":["components/CountryChart.js","components/styled/Checkbox.js","components/Home.js","components/CoreLayout.js","App.js","serviceWorker.js","index.js"],"names":["ChartWrapper","styled","div","_templateObject","props","disable","coolColors","CountryChart","_this$props","this","data","yLabel","unit","react_default","a","createElement","length","es6","height","margin","top","left","bottom","right","Object","keys","filter","key","map","i","type","dot","dataKey","stroke","strokeDasharray","tick","fill","width","name","angle","position","style","textAnchor","contentStyle","background","theme","darkBG","color","Component","withTheme","Icon","svg","Checkbox_templateObject","HiddenCheckbox","input","attrs","_templateObject2","StyledCheckbox","_templateObject3","checked","accentColor","CheckboxContainer","_templateObject4","Checkbox","_ref","className","objectWithoutProperties","assign","viewBox","points","R","require","ContentWrapper","Home_templateObject","CheckboxRow","Home_templateObject2","DataWrapper","Home_templateObject3","LoaderWrapper","Home_templateObject4","Home","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","newCountries","oldCountries","state","selectedCountries","newC","x","includes","fetchCountryData","value","oldC","setState","countryData","objectSpread","defineProperty","undefined","code","loading","fetch","concat","then","response","json","find","propEq","catch","e","console","error","parseForChart","perCapita","parsedForChart","forEach","cd","item","co2","parseInt","val","pop","toFixed","final","el","push","year","parseForSelect","countries","label","togglePerCapita","_this2","log","parsedData","parsedCountries","react_select_esm","onChange","isMulti","components","makeAnimated","options","styled_Checkbox","withPCs","toggleWithPCs","react_spinners","sizeUnit","size","components_CountryChart","CoreLayout_templateObject","primaryColorPink","primaryColorBlue","Content","CoreLayout_templateObject2","Header","CoreLayout_templateObject3","Footer","CoreLayout_templateObject4","CoreLayout","CoreLayout_ContentWrapper","children","coolTheme","App","id","styled_components_browser_esm","components_CoreLayout","components_Home","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9419f6d4.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport {\n  ResponsiveContainer,\n  LineChart,\n  Line,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Label,\n  Legend\n} from 'recharts'\nimport styled, { withTheme } from 'styled-components'\n\nconst ChartWrapper = styled.div`\n  pointer-events: ${props => (props.disable ? 'none' : 'auto')};\n  color: white;\n`\n\nconst coolColors = [\n  '#fff59d',\n  '#ffab91',\n  '#c5e1a5',\n  '#80deea',\n  '#b39ddb',\n  '#eeeeee',\n  '#ef5350',\n  '#9c27b0',\n  '#1e88e5',\n  '#43a047'\n]\n\nclass CountryChart extends Component {\n  render() {\n    const { data, yLabel, unit } = this.props\n\n    return (\n      <ChartWrapper disable={data.length === 0}>\n        <ResponsiveContainer height={350}>\n          <LineChart data={data} margin={{ top: 50, left: 30, bottom: 50, right: 50 }}>\n            {data &&\n              data[0] &&\n              Object.keys(data[0])\n                .filter(key => key !== 'year')\n                .map((key, i) => {\n                  return (\n                    <Line\n                      key={key}\n                      type=\"monotone\"\n                      dot={false}\n                      dataKey={key}\n                      stroke={coolColors[i % coolColors.length]}\n                    />\n                  )\n                })}\n            <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n            <XAxis dataKey=\"year\" tick={{ fill: 'white' }} height={40} />\n            <YAxis width={80} tick={{ fill: 'white' }} name=\"CO2 emissions\" unit={unit}>\n              <Label angle={270} position=\"left\" style={{ textAnchor: 'middle', fill: 'white' }}>\n                {yLabel}\n              </Label>\n            </YAxis>\n            <Legend />\n            <Tooltip contentStyle={{ background: this.props.theme.darkBG, color: 'white' }} />\n          </LineChart>\n        </ResponsiveContainer>\n      </ChartWrapper>\n    )\n  }\n}\n\nexport default withTheme(CountryChart)\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst Icon = styled.svg`\n  fill: none;\n  stroke: white;\n  stroke-width: 2px;\n`\n\nconst HiddenCheckbox = styled.input.attrs({ type: 'checkbox' })`\n  // Hide checkbox visually but remain accessible to screen readers.\n  // Source: https://polished.js.org/docs/#hidevisually\n  border: 0;\n  clip: rect(0 0 0 0);\n  clippath: inset(50%);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n`\n\nconst StyledCheckbox = styled.div`\n  display: inline-block;\n  width: 16px;\n  height: 16px;\n  background: ${props => (props.checked ? props.theme.accentColor : 'white')};\n  border-radius: 3px;\n  transition: all 150ms;\n\n  ${Icon} {\n    visibility: ${props => (props.checked ? 'visible' : 'hidden')};\n  }\n`\n\nconst CheckboxContainer = styled.div`\n  display: inline-block;\n  vertical-align: middle;\n`\n\nconst Checkbox = ({ className, checked, ...props }) => (\n  <CheckboxContainer className={className}>\n    <HiddenCheckbox checked={checked} {...props} />\n    <StyledCheckbox checked={checked}>\n      <Icon viewBox=\"0 0 24 24\">\n        <polyline points=\"20 6 9 17 4 12\" />\n      </Icon>\n    </StyledCheckbox>\n  </CheckboxContainer>\n)\n\nexport default Checkbox\n","import React, { Component } from 'react'\nimport Select from 'react-select'\nimport makeAnimated from 'react-select/lib/animated'\nimport styled, { withTheme } from 'styled-components'\nimport { css } from '@emotion/core'\nimport { PacmanLoader } from 'react-spinners'\n\nimport CountryChart from './CountryChart'\nimport Checkbox from './styled/Checkbox'\n\nconst R = require('ramda')\n\nconst ContentWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst CheckboxRow = styled.div`\n  padding: 10px 0px;\n\n  label {\n    margin-right: 20px;\n    margin-left: 5px;\n\n    span {\n      color: white;\n      margin-left: 10px;\n    }\n  }\n`\n\nconst DataWrapper = styled.div`\n  background: ${props => props.theme.darkBG};\n  position: relative;\n`\n\nconst LoaderWrapper = styled.div`\n  display: inline;\n  position: absolute;\n  top: 40%;\n  left: 50%;\n`\n\nclass Home extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      countries: {},\n      selectedCountries: [],\n      countryData: {},\n      perCapita: false,\n      loading: false\n    }\n  }\n\n  componentDidMount() {\n    fetch('/api/countries')\n      .then(response => response.json())\n      .then(data => {\n        this.setState({ countries: data })\n      })\n      .catch(e => {\n        console.log(e)\n      })\n  }\n\n  handleChange = newCountries => {\n    const oldCountries = this.state.selectedCountries\n    if (newCountries.length > oldCountries.length) {\n      const newC = R.filter(x => !oldCountries.includes(x), newCountries)\n      if (newC[0]) {\n        this.fetchCountryData(newC[0].value)\n      }\n    } else {\n      const oldC = R.filter(x => !newCountries.includes(x), oldCountries)\n      if (oldC[0]) {\n        this.setState({ countryData: { ...this.state.countryData, [oldC[0].value]: undefined } })\n      }\n    }\n    this.setState({ selectedCountries: newCountries })\n  }\n\n  fetchCountryData = code => {\n    this.setState({ loading: true })\n    fetch(`/api/countryData?country=${code}`)\n      .then(response => response.json())\n      .then(data => {\n        const countryStillSelected = R.find(R.propEq('value', code))(this.state.selectedCountries)\n        if (countryStillSelected) {\n          this.setState({\n            loading: false,\n            countryData: { ...this.state.countryData, [code]: data }\n          })\n        } else {\n          this.setState({\n            loading: false\n          })\n        }\n      })\n      .catch(e => {\n        this.setState({ loading: false })\n        console.error(e)\n      })\n  }\n\n  parseForChart = countryData => {\n    const { perCapita } = this.state\n    const parsedForChart = {}\n    Object.keys(this.state.countryData).forEach(key => {\n      const cd = this.state.countryData[key]\n      for (let x in cd) {\n        const item = cd[x]\n        const co2 = parseInt(item['co2']['Value'].val)\n        const pop = parseInt(item['population']['Value'].val)\n        const value = perCapita ? ((co2 / pop) * 1000).toFixed(3) : (co2 / 1000).toFixed(3)\n        parsedForChart[item['Year'].val] = {\n          ...parsedForChart[item['Year'].val],\n          [item['Country or Area'].val]: value\n        }\n      }\n    })\n    const final = []\n    Object.keys(parsedForChart).forEach(key => {\n      const el = parsedForChart[key]\n      final.push({ year: key, ...el })\n    })\n    return final\n  }\n\n  parseForSelect = countries => {\n    return Object.keys(countries).map(key => ({ value: key, label: countries[key] }))\n  }\n\n  togglePerCapita = () => {\n    this.setState({ perCapita: !this.state.perCapita })\n  }\n\n  render() {\n    const parsedData = this.parseForChart(this.state.countryData)\n    const parsedCountries = this.parseForSelect(this.state.countries)\n    const yLabel = this.state.perCapita\n      ? 'CO2 Emissions (kt) per 1000 Capita'\n      : 'CO2 Emissions (Mt)'\n    const unit = this.state.perCapita ? 'kt' : 'Mt'\n    return (\n      <ContentWrapper>\n        <Select\n          onChange={this.handleChange}\n          isMulti\n          name=\"countries\"\n          components={makeAnimated()}\n          options={parsedCountries}\n        />\n\n        <CheckboxRow>\n          <label>\n            <Checkbox checked={this.state.perCapita} onChange={this.togglePerCapita} />\n            <span>Per Capita</span>\n          </label>\n\n          <label>\n            <Checkbox checked={this.state.withPCs} onChange={this.toggleWithPCs} />\n            <span>Show Power Countries</span>\n          </label>\n        </CheckboxRow>\n\n        <DataWrapper>\n          <LoaderWrapper>\n            <PacmanLoader\n              sizeUnit={'px'}\n              size={25}\n              color={this.props.theme.accentColor}\n              loading={this.state.loading}\n            />\n          </LoaderWrapper>\n\n          <CountryChart data={parsedData} yLabel={yLabel} unit={unit} />\n        </DataWrapper>\n      </ContentWrapper>\n    )\n  }\n}\n\nexport default withTheme(Home)\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst ContentWrapper = styled.div`\n  height: 100%;\n  background-image: linear-gradient(\n    0.75turn,\n    ${props => props.theme.primaryColorPink},\n    ${props => props.theme.primaryColorBlue}\n  );\n`\n\nconst Content = styled.div`\n  margin: 20px;\n`\n\nconst Header = styled.div`\n  height: 50px;\n  color: white;\n  display: flex;\n  align-items: center; /* align vertical */\n\n  p {\n    display: inline;\n    font-size: 26px;\n    font-family: 'Times New Roman', Times, serif;\n    margin: 16px 0px 0px 20px;\n  }\n`\n\nconst Footer = styled.div`\n  position: fixed;\n  bottom: 0;\n  height: 50px;\n  width: 100%;\n  display: flex;\n  align-items: center;\n\n  p {\n    color: 'white';\n    font-size: 12px;\n    margin: 0;\n    margin-left: 20px;\n  }\n`\n\nclass CoreLayout extends Component {\n  render() {\n    return (\n      <ContentWrapper>\n        <Header>\n          <p>CO2 VIZ</p>\n        </Header>\n        <Content>{this.props.children}</Content>\n        <Footer>\n          <p>Made by Linda Levänen, 2019</p>\n        </Footer>\n      </ContentWrapper>\n    )\n  }\n}\n\nexport default CoreLayout\n","import React, { Component } from 'react'\nimport './App.css'\nimport { ThemeProvider } from 'styled-components'\n\nimport Home from './components/Home'\nimport CoreLayout from './components/CoreLayout'\n\nconst origTheme = {\n  primaryColor: '#8e8e90',\n  primaryColorDark: '#49494b',\n  accentColor: '#bd8c7d'\n}\n\nconst coolTheme = {\n  primaryColorPink: '#e66465',\n  primaryColorBlue: '#9198e5',\n  accentColor: '#e66465',\n  darkBG: '#00000073'\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <div id=\"root\">\n        <ThemeProvider theme={coolTheme}>\n          <CoreLayout>\n            <Home />\n          </CoreLayout>\n        </ThemeProvider>\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}